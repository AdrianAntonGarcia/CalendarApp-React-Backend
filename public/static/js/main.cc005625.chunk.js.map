{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","initEvent","notes","CalendarModal","dateStart","setdateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setformValues","startForm","endForm","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","console","log","trim","length","getState","eventoGuardado","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","vistaActual","onSelectSlot","selectable","view","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"mNAAaA,EACE,kBADFA,EAEG,mBAFHA,EAIK,qBAJLA,EAKE,iBALFA,EAQE,kBARFA,EASY,6BATZA,EAUG,wBAVHA,EAWG,wBAXHA,EAYE,wBAZFA,EAeS,qCAfTA,EAiBA,eAjBAA,EAoBC,gBClBRC,EAAe,CACnBC,UAAU,G,QCUND,EAAe,CACnBE,OAAQ,GACRC,YAAa,MCbTH,EAAe,CACnBI,WAAW,GCEAC,EAAcC,YAAgB,CACzCC,GDAuB,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFS,GADL,IAEEJ,WAAW,IAEf,KAAKL,EACH,OAAO,2BACFS,GADL,IAEEJ,WAAW,IAEf,QACE,OAAOI,ICZXG,SFW6B,WAAmC,IAAlCH,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC/D,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BAAKS,GAAZ,IAAmBL,YAAaM,EAAOG,UACzC,KAAKb,EACH,OAAO,2BAAKS,GAAZ,IAAmBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBO,EAAOG,YACtD,KAAKb,EACH,OAAO,2BAAKS,GAAZ,IAAmBL,YAAa,OAClC,KAAKJ,EACH,OAAO,2BACFS,GADL,IAEEN,OAAQM,EAAMN,OAAOW,KAAI,SAACC,GAAD,OACvBA,EAAEC,KAAON,EAAOG,QAAQG,GAAKN,EAAOG,QAAUE,OAGpD,KAAKf,EACH,OAAO,2BACFS,GADL,IAEEN,OAAQM,EAAMN,OAAOc,QAAO,SAACF,GAAD,OAAOA,EAAEC,KAAOP,EAAML,YAAYY,MAC9DZ,YAAa,OAEjB,KAAKJ,EACH,OAAO,2BACFS,GADL,IAEEN,OAAO,YAAKO,EAAOG,WAEvB,KAAKb,EACH,OAAO,eACFC,GAEP,QACE,OAAOQ,IEzCXS,KHAyB,WAAmC,IAAlCT,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,uCACFS,GACAC,EAAOG,SAFZ,IAGEX,UAAU,IAEd,KAAKF,EACH,OAAO,2BACFS,GADL,IAEEP,UAAU,IAEd,KAAKF,EACH,MAAO,CACLE,UAAU,GAEd,QACE,OAAOO,MItBPU,EACe,qBAAXC,QACNA,OAAOC,sCACTC,IAEWC,EAAQC,YACnBlB,EACAa,EAAiBM,YAAgBC,O,yDCX7BC,EAAUC,+CAEVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAMN,EAAN,YAAiBG,GAC1B,MAAe,QAAXE,EACKE,MAAMD,GAENC,MAAMD,EAAK,CAChBD,OAAQA,EACRG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,MAKrBQ,EAAgB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAC/C,MAAe,QAAXV,EACKE,MAAMD,EAAK,CAChBD,SACAG,QAAS,CACP,UAAWK,KAIRN,MAAMD,EAAK,CAChBD,OAAQA,EACRG,QAAS,CACP,eAAgB,mBAChB,UAAWK,GAEbJ,KAAMC,KAAKC,UAAUP,MCoDrBY,EAAiB,iBAAO,CAC5BhC,KAAMX,IAOF4C,EAAQ,SAACC,GAAD,MAAW,CACvBlC,KAAMX,EACNa,QAASgC,IAULC,EAAS,iBAAO,CACpBnC,KAAMX,I,gBCzGK+C,EAAU,WAAwB,IAAvB9C,EAAsB,uDAAP,GAAO,EACjB+C,mBAAS/C,GADQ,mBACtCgD,EADsC,KAC9BC,EAD8B,KAEvCC,EAAQ,WACbD,EAAUjD,IAELmD,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5BH,EAAU,2BACND,GADK,kBAEPI,EAAOC,KAAOD,EAAOE,UAIxB,MAAO,CAACN,EAAQG,EAAmBD,ICPvBK,G,MAAc,WACzB,IAAMC,EAAWC,cADc,EAImBX,EAAQ,CACxDY,OAAQ,oBACRC,UAAW,WANkB,mBAIxBC,EAJwB,KAIPC,EAJO,KAQvBH,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UARe,EAgByBb,EAAQ,CAC9DgB,MAAO,SACPC,OAAQ,GACRC,WAAY,SACZC,WAAY,WApBiB,mBAgBxBC,EAhBwB,KAgBJC,EAhBI,KAsBvBL,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAYnC,OACE,yBAAKG,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,uCACA,0BAAMC,SA7BM,SAACvD,GFPG,IAACwD,EAAOC,EEQ9BzD,EAAE0D,iBACFhB,GFTuBc,EESHZ,EFTUa,EESFZ,EFR9B,uCAAO,WAAOH,GAAP,iBAAAiB,EAAA,sEACc7C,EAAc,OAAQ,CAAE0C,QAAOC,YAAY,QADzD,cACCG,EADD,gBAEcA,EAAKC,OAFnB,QAECxC,EAFD,QAGIyC,IACPpC,aAAaqC,QAAQ,QAAS1C,EAAKI,OACnCC,aAAaqC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDvB,EACEb,EAAM,CACJqC,IAAK7C,EAAK6C,IACV3B,KAAMlB,EAAKkB,SAIf4B,IAAKC,KAAK,QAAS/C,EAAKgD,IAAK,SAb1B,2CAAP,0DEoCU,yBAAKf,UAAU,cACb,2BACE1D,KAAK,OACL0D,UAAU,eACVgB,YAAY,SACZ/B,KAAK,SACLC,MAAOI,EACP2B,SAAUxB,KAGd,yBAAKO,UAAU,cACb,2BACE1D,KAAK,WACL0D,UAAU,eACVgB,YAAY,gBACZ/B,KAAK,YACLC,MAAOK,EACP0B,SAAUxB,KAGd,yBAAKO,UAAU,cACb,2BAAO1D,KAAK,SAAS0D,UAAU,YAAYd,MAAM,aAKvD,yBAAKc,UAAU,yBACb,wCACA,0BAAMC,SA5CS,SAACvD,GFKG,IAACwD,EAAOC,EAAUlB,EEJ3CvC,EAAE0D,iBAEER,IAAeC,GACjBgB,IAAKC,KAAK,QAAS,uCAAqC,SAE1D1B,GFD0Bc,EECHP,EFDUQ,EECFP,EFDYX,EECAS,EFA7C,uCAAO,WAAON,GAAP,iBAAAiB,EAAA,sEACc7C,EACjB,WACA,CAAEyB,OAAMiB,QAAOC,YACf,QAJG,cACCG,EADD,gBAMcA,EAAKC,OANnB,QAMCxC,EAND,QAOIyC,IACPpC,aAAaqC,QAAQ,QAAS1C,EAAKI,OACnCC,aAAaqC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDvB,EACEb,EAAM,CACJqC,IAAK7C,EAAK6C,IACV3B,KAAMlB,EAAKkB,SAIf4B,IAAKC,KAAK,QAAS/C,EAAKgD,IAAK,SAjB1B,2CAAP,0DEuCU,yBAAKf,UAAU,cACb,2BACE1D,KAAK,OACL0D,UAAU,eACVgB,YAAY,SACZ/B,KAAK,QACLC,MAAOQ,EACPuB,SAAUlB,KAGd,yBAAKC,UAAU,cACb,2BACE1D,KAAK,QACL0D,UAAU,eACVgB,YAAY,SACZ/B,KAAK,SACLC,MAAOS,EACPsB,SAAUlB,KAGd,yBAAKC,UAAU,cACb,2BACE1D,KAAK,WACL0D,UAAU,eACVgB,YAAY,gBACZ/B,KAAK,aACLC,MAAOU,EACPqB,SAAUlB,KAId,yBAAKC,UAAU,cACb,2BACE1D,KAAK,WACL0D,UAAU,eACVgB,YAAY,0BACZ/B,KAAK,aACLC,MAAOW,EACPoB,SAAUlB,KAId,yBAAKC,UAAU,cACb,2BAAO1D,KAAK,SAAS0D,UAAU,YAAYd,MAAM,wB,yBCrHlDgC,EAAgB,WAAkB,IAAjBpF,EAAgB,uDAAP,GACrC,OAAOA,EAAOW,KAAI,SAACC,GAAD,mBAAC,eACdA,GADa,IAEhByE,IAAKC,IAAO1E,EAAEyE,KAAKE,SACnBC,MAAOF,IAAO1E,EAAE4E,OAAOD,eCoBrBE,EAAc,SAACC,GAAD,MAAY,CAC9BlF,KAAMX,EACNa,QAASgF,IAQEC,EAAwB,iBAAO,CAC1CnF,KAAMX,IAqBF+F,EAAe,SAACF,GAAD,MAAY,CAC/BlF,KAAMX,EACNa,QAASgF,IAmBLG,GAAe,iBAAO,CAC1BrF,KAAMX,IAgBFiG,GAAc,SAAC9F,GAAD,MAAa,CAC/BQ,KAAMX,EACNa,QAASV,IC7FE+F,GAAS,WAAO,IACnB5C,EAAS6C,aAAY,SAAC1F,GAAD,OAAWA,EAAMS,QAAtCoC,KACFG,EAAWC,cAMjB,OACE,yBAAKW,UAAU,mCACb,0BAAMA,UAAU,gBAAgBf,GAChC,4BAAQe,UAAU,yBAAyB+B,QAR1B,WACnB3D,aAAa4D,QACb5C,EL0FF,uCAAO,WAAOA,GAAP,SAAAiB,EAAA,sDACLjC,aAAa4D,QACb5C,EAASX,KAFJ,2CAAP,uDKzFEW,ED0F8B,CAChC9C,KAAMX,MCrFA,uBAAGqE,UAAU,wBACb,0BAAMA,UAAU,QAAhB,YClBKiC,GAAW,CACtBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNnB,MAAO,SACPoB,gBAAiB,+BACjBC,SAAU,SAACC,GAAD,8BAAyBA,EAAzB,OCXCC,GAAgB,SAAC,GAAe,IAAbvB,EAAY,EAAZA,MACtBwB,EAAgBxB,EAAhBwB,MAAOxE,EAASgD,EAAThD,KACf,OACE,6BACE,oCAAUwE,EAAV,KACA,mCAASxE,EAAKS,Q,wCCLPgE,GAAc,iBAAO,CAChC3G,KAAMX,ICYFuH,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,KAAMC,cAAc,SAEpB,IAAMC,GAAMxC,MAASyC,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,QAC5C5C,GAAMC,MAASyC,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,QAE5CC,GAAY,CAChBhB,MAAO,GACPiB,MAAO,GACP3C,MAAOsC,GAAIvC,SACXF,IAAKA,GAAIE,UAGE6C,GAAgB,WAAO,IAAD,EACCvF,mBAASiF,GAAIvC,UADd,mBAC1B8C,EAD0B,KACfC,EADe,OAEHzF,mBAASwC,GAAIE,UAFV,mBAE1BgD,EAF0B,KAEjBC,EAFiB,OAIG3F,oBAAS,GAJZ,mBAI1B4F,EAJ0B,KAIdC,EAJc,KAM3BpF,EAAWC,cACTrD,EAAc8F,aAAY,SAAC1F,GACjC,OAAOA,EAAMD,MADPH,UAGAD,EAAgB+F,aAAY,SAAC1F,GACnC,OAAOA,EAAMG,YADPR,YAVyB,EAcG4C,mBAASqF,IAdZ,mBAc1BS,EAd0B,KAcdC,EAdc,KAgBzBT,EAAiDQ,EAAjDR,MAAOjB,EAA0CyB,EAA1CzB,MAAc2B,EAA4BF,EAAnCnD,MAAuBsD,EAAYH,EAAjBtD,IAExC0D,qBAAU,WAENH,EADE3I,GAGYiI,MAEf,CAACjI,EAAa2I,IAEjB,IAAM3F,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B0F,EAAc,2BACTD,GADQ,kBAEVzF,EAAOC,KAAOD,EAAOE,UAGpB4F,EAAa,WACjB1F,EDjE+B,CACjC9C,KAAMX,ICkEJyD,EAASqC,KAETiD,EAAcV,KAmDhB,OACE,kBAAC,KAAD,CACEe,OAAQ/I,EACRgJ,eAAgBF,EAChBG,MAAO/B,GACPgC,eAAgB,IAChBlF,UAAU,QACVmF,iBAAiB,eAEjB,gCAAMpJ,EAAc,gBAAkB,gBACtC,6BACA,0BAAMiE,UAAU,YAAYC,SA5CP,SAACvD,GACxBA,EAAE0D,iBAEF,ILxD6BoB,EKwDvB4D,EAAchE,IAAOuD,GACrBU,EAAYjE,IAAOwD,GAEzB,OAAIQ,EAAYE,cAAcD,IAC5BE,QAAQC,IAAI,0BACL3E,IAAKC,KACV,QACA,sDACA,UAIAkC,EAAMyC,OAAOC,OAAS,EACjBlB,GAAc,IAOrBpF,EADErD,GL3EyByF,EK4EDiD,EL3E9B,uCAAO,WAAOrF,GAAP,iBAAAiB,EAAA,sEAEHkF,QAAQC,IAAIhE,GAFT,SAGgBtD,EAAc,UAAD,OAAWsD,EAAM7E,IAAM6E,EAAO,OAH3D,cAGGlB,EAHH,gBAIgBA,EAAKC,OAJrB,OAIGxC,EAJH,OAKHwH,QAAQC,IAAIzH,GACRA,EAAKyC,GACPpB,EAASsC,EAAaF,IAEtBX,IAAKC,KAAK,QAAS/C,EAAKgD,IAAK,SAT5B,kDAYHwE,QAAQC,IAAR,MAZG,0DAAP,uDAnC8B,SAAChE,GAC/B,8CAAO,WAAOpC,EAAUuG,GAAjB,uBAAAtF,EAAA,+DACiBsF,IAAW9I,KAAzB+D,EADH,EACGA,IAAK3B,EADR,EACQA,KADR,kBAGgBf,EAAc,SAAUsD,EAAO,QAH/C,cAGGlB,EAHH,gBAIgBA,EAAKC,OAJrB,QAIGxC,EAJH,QAKMyC,KACPgB,EAAM7E,GAAKoB,EAAK6H,eAAejJ,GAC/B6E,EAAMhD,KAAO,CACXqH,IAAKjF,EACL3B,KAAMA,GAERG,EAASmC,EAAYC,KAXpB,kDAcH+D,QAAQC,IAAR,MAdG,0DAAP,wDKgHaM,CAAiBrB,IAI5BD,GAAc,QACdM,OAcI,yBAAK9E,UAAU,cACb,sDACA,kBAAC,KAAD,CACEiB,SA/DoB,SAACvE,GAC7B0H,EAAa1H,GACbgI,EAAc,2BACTD,GADQ,IAEXnD,MAAO5E,MA4DDwC,MAAOiF,EACPnE,UAAU,kBAId,yBAAKA,UAAU,cACb,mDACA,kBAAC,KAAD,CACEiB,SAjEkB,SAACvE,GAC3B4H,EAAW5H,GACXgI,EAAc,2BACTD,GADQ,IAEXtD,IAAKzE,MA8DCwC,MAAOmF,EACP0B,QAAS5B,EACTnE,UAAU,kBAId,6BACA,yBAAKA,UAAU,cACb,iDACA,2BACE1D,KAAK,OACL0D,UAAS,wBAAmBuE,GAAc,cAC1CvD,YAAY,uBACZ/B,KAAK,QACL+G,aAAa,MACb9G,MAAO8D,EACP/B,SAAUlC,IAEZ,2BAAOpC,GAAG,YAAYqD,UAAU,wBAAhC,6BAKF,yBAAKA,UAAU,cACb,8BACE1D,KAAK,OACL0D,UAAU,eACVgB,YAAY,QACZiF,KAAK,IACLhH,KAAK,QACLC,MAAO+E,EACPhD,SAAUlC,IAEZ,2BAAOpC,GAAG,YAAYqD,UAAU,wBAAhC,6BAKF,4BAAQ1D,KAAK,SAAS0D,UAAU,qCAC9B,uBAAGA,UAAU,gBACb,8CC1LGkG,I,cAAY,WACvB,IAAM9G,EAAWC,cAKjB,OACE,4BAAQW,UAAU,sBAAsB+B,QALnB,WACrB3C,EAAS6D,MACT7D,EAASqC,OAIP,uBAAGzB,UAAU,mBCTNmG,GAAiB,WAC5B,IAAM/G,EAAWC,cAIjB,OACE,4BAAQW,UAAU,4BAA4B+B,QAJ3B,WACnB3C,EPyDF,uCAAO,WAAOA,EAAUuG,GAAjB,mBAAAtF,EAAA,6DACG1D,EAAOgJ,IAAWpJ,SAASR,YAA3BY,GADH,kBAGgBuB,EAAc,UAAD,OAAWvB,GAAM,GAAI,UAHlD,cAGG2D,EAHH,gBAIgBA,EAAKC,OAJrB,QAIGxC,EAJH,QAKMyC,GACPpB,EAASuC,MAETd,IAAKC,KAAK,QAAS/C,EAAKgD,IAAK,SAR5B,kDAWHwE,QAAQC,IAAR,MAXG,0DAAP,2DOrDI,uBAAGxF,UAAU,iBACb,iDCSNoB,IAAOgF,OAAO,MACd,IAAMC,GAAYC,YAAgBlF,KAErBmF,GAAiB,WAAO,IAAD,EACF5H,mBAC9BP,aAAaC,QAAQ,aAAe,SAFJ,mBAC3BmI,EAD2B,KACjBC,EADiB,KAI5BrH,EAAWC,cAJiB,EAMFyC,aAAY,SAAC1F,GAAD,OAAWA,EAAMG,YAArDT,EAN0B,EAM1BA,OAAQC,EANkB,EAMlBA,YACR6E,EAAQkB,aAAY,SAAC1F,GAAD,OAAWA,EAAMS,QAArC+D,IAGRiE,qBAAU,WACRzF,ERiDF,uCAAO,WAAOA,GAAP,mBAAAiB,EAAA,+EAEgBnC,EAAc,UAF9B,cAEGoC,EAFH,gBAGgBA,EAAKC,OAHrB,OAGGxC,EAHH,OAIGjC,EAASoF,EAAcnD,EAAK2I,SAClCtH,EAASwC,GAAY9F,IALlB,kDAOHyJ,QAAQC,IAAR,MAPG,0DAAP,yDQhDG,CAACpG,IA+BJ,OACE,6BACE,kBAAC,GAAD,MACA,kBAAC,IAAD,CACEY,UAAU,kBACVqG,UAAWA,GACXvK,OAAQA,EACR6K,cAAc,QACdC,YAAY,MACZ3E,SAAUA,GACV4E,gBA1BmB,SAACrF,EAAOF,EAAOH,EAAK2F,GAQ3C,MAAO,CACL7B,MARY,CACZ8B,gBAAkBnG,IAAQY,EAAMhD,KAAKqH,IAAO,UAAY,UACxDmB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAqBLC,mBAxCgB,SAAC1K,GACrB0C,EAAS6D,OAwCLoE,cArCgB,SAAC3K,GACrB0C,ERZsC,CACxC9C,KAAMX,EACNa,QQU0BE,KAqCpB4K,OAjCe,SAACC,GACpBd,EAAYc,GACZnJ,aAAaqC,QAAQ,WAAY8G,IAgC7BC,aAjBiB,SAAC9K,GACtB0C,EAASqC,MAiBLgG,YAAY,EACZC,KAAMlB,EACNmB,WAAY,CACVnG,MAAOuB,QAGRhH,GAAe,kBAAC,GAAD,MAClB,kBAAC,GAAD,MAEA,kBAAC,GAAD,Q,SCvFO6L,GAAe,SAAC,GAItB,IAHLC,EAGI,EAHJA,WACWC,EAEP,EAFJC,UACGC,EACC,2CACJ,OACE,kBAAC,IAAD,iBACMA,EADN,CAEED,UAAW,SAACE,GAAD,OACTJ,EAAa,kBAACC,EAAcG,GAAY,kBAAC,IAAD,CAAUC,GAAG,gBCThDC,GAAc,SAAC,GAIrB,IAHML,EAGP,EAHJC,UACAF,EAEI,EAFJA,WACGG,EACC,2CACJ,OACE,kBAAC,IAAD,iBACMA,EADN,CAEED,UAAW,SAACE,GAAD,OACRJ,EAAwC,kBAAC,IAAD,CAAUK,GAAG,MAAxC,kBAACJ,EAAcG,QCLxBG,GAAY,WACvB,IAAMhJ,EAAWC,cADY,EAEHyC,aAAY,SAAC1F,GAAD,OAAWA,EAAMS,QAA/ChB,EAFqB,EAErBA,SAAU+E,EAFW,EAEXA,IAMlB,OAJAiE,qBAAU,WACRzF,EfmDF,uCAAO,WAAOA,GAAP,iBAAAiB,EAAA,sEACcnC,EAAc,cAD5B,cACCoC,EADD,gBAEcA,EAAKC,OAFnB,QAECxC,EAFD,QAGIyC,IACPpC,aAAaqC,QAAQ,QAAS1C,EAAKI,OACnCC,aAAaqC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDvB,EACEb,EAAM,CACJqC,IAAK7C,EAAK6C,IACV3B,KAAMlB,EAAKkB,SAKfG,EAASd,KAdN,2CAAP,yDelDG,CAACc,IAEAvD,EACK,yCAGP,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEwM,OAAK,EACLC,KAAK,SACLP,UAAW5I,EACX0I,aAAcjH,IAEhB,kBAAC,GAAD,CACEyH,OAAK,EACLC,KAAK,IACLP,UAAWxB,GACXsB,aAAcjH,IAEhB,kBAAC,IAAD,CAAUsH,GAAG,eC9BVK,GAAc,WACzB,OACE,kBAAC,IAAD,CAAUrL,MAAOA,GACf,kBAAC,GAAD,Q,OCHNsL,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.cc005625.chunk.js","sourcesContent":["export const types = {\r\n  uiOpenModal: '[ui] Open modal',\r\n  uiCloseModal: '[ui] Close modal',\r\n\r\n  eventSetActive: '[event] Set Active',\r\n  eventLogout: '[event] Logout',\r\n\r\n  eventStartAddNew: '[event] Start add new',\r\n  eventAddNew: '[event] Add new',\r\n  eventClearActiveEvent: '[event] Clear active event',\r\n  eventUpdated: '[event] Event updated',\r\n  eventDeleted: '[event] Event deleted',\r\n  eventLoaded: '[event] Events loaded',\r\n\r\n  authChecking: '[auth] Checking login state',\r\n  authCheckingFinish: '[auth] Finish Checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n  authStartRegister: '[auth] Start Register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout',\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  checking: true,\r\n  // uid: null,\r\n  // name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false,\r\n      };\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n    case types.authLogout:\r\n      return {\r\n        checking: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types/types';\r\n\r\n// {\r\n//   id: 'dishajdhjsa',\r\n//   title: 'Cumpleaños del jefe',\r\n//   start: moment().toDate(), //new Date en moment\r\n//   end: moment().add(2, 'hours').toDate(),\r\n//   notes: 'Comprar el pastel',\r\n//   user: {\r\n//     _id: '123',\r\n//     name: 'Adrian',\r\n//   },\r\n// },\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return { ...state, activeEvent: action.payload };\r\n    case types.eventAddNew:\r\n      return { ...state, events: [...state.events, action.payload] };\r\n    case types.eventClearActiveEvent:\r\n      return { ...state, activeEvent: null };\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((e) =>\r\n          e.id === action.payload.id ? action.payload : e\r\n        ),\r\n      };\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n        activeEvent: null,\r\n      };\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload],\r\n      };\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true,\r\n      };\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`; // ej: localhost:4000/api/auth\r\n  if (method === 'GET') {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch(url, {\r\n      method: method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`; // ej: localhost:4000/api/auth\r\n  const token = localStorage.getItem('token') || '';\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token,\r\n      },\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method: method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\n/**\r\n * Acción asíncrona que realiza el login del usuario, llamando a la base de datos y\r\n * llamando a la acción para guardar el estado del usuario\r\n * @param {*} email\r\n * @param {*} password\r\n */\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Acción asíncrona que realiza el registro del usuario, llamando a la base de datos y\r\n * llamando a la acción para guardar el estado del usuario\r\n * @param {*} email\r\n * @param {*} password\r\n * @param {*} name\r\n */\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\r\n      'auth/new',\r\n      { name, email, password },\r\n      'POST'\r\n    );\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Acción asíncrona que comprueba que el token del usuario sea siendo\r\n * válido y mantiene la sesión del usuario\r\n */\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken('auth/renew');\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      // Swal.fire('Error', body.msg, 'error');\r\n      dispatch(checkingFinish());\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Ponemos el checking a false\r\n */\r\nconst checkingFinish = () => ({\r\n  type: types.authCheckingFinish,\r\n});\r\n\r\n/**\r\n * Acción síncrona que guarda el estado del usuario\r\n * @param {*} user\r\n */\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nconst logout = () => ({\r\n  type: types.authLogout,\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\tconst [values, setValues] = useState(initialState);\r\n\tconst reset = () => {\r\n\t\tsetValues(initialState);\r\n\t};\r\n\tconst handleInputChange = ({ target }) => {\r\n\t\tsetValues({\r\n\t\t\t...values,\r\n\t\t\t[target.name]: target.value,\r\n\t\t});\r\n\t};\r\n\r\n\treturn [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Formulario del login\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: 'adrtler@gmail.com',\r\n    lPassword: '123456',\r\n  });\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  // Formulario del registro\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: 'Adrian',\r\n    rEmail: '',\r\n    rPassword1: '123456',\r\n    rPassword2: '123456',\r\n  });\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword1 !== rPassword2) {\r\n      Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n    }\r\n    dispatch(startRegister(rEmail, rPassword1, rName));\r\n    // dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword1\"\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n  return events.map((e) => ({\r\n    ...e,\r\n    end: moment(e.end).toDate(),\r\n    start: moment(e.start).toDate(),\r\n  }));\r\n};\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid, name } = getState().auth;\r\n    try {\r\n      const resp = await fetchConToken('events', event, 'POST');\r\n      const body = await resp.json();\r\n      if (body.ok) {\r\n        event.id = body.eventoGuardado.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name,\r\n        };\r\n        dispatch(eventAddNew(event));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n  type: types.eventSetActive,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(event);\r\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n      const body = await resp.json();\r\n      console.log(body);\r\n      if (body.ok) {\r\n        dispatch(eventUpdated(event));\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    const { id } = getState().calendar.activeEvent;\r\n    try {\r\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n      const body = await resp.json();\r\n      if (body.ok) {\r\n        dispatch(eventDeleted());\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nconst eventDeleted = () => ({\r\n  type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken('events');\r\n      const body = await resp.json();\r\n      const events = prepareEvents(body.eventos);\r\n      dispatch(eventLoaded(events));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events,\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n  type: types.eventLogout,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n  const { name } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    dispatch(startLogout());\r\n    dispatch(eventLogout());\r\n  };\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span className=\"ml-1\">Salir</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  const { title, user } = event;\r\n  return (\r\n    <div>\r\n      <strong> {title} </strong>\r\n      <span>- {user.name}</span>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n  type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n  type: types.uiCloseModal,\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventStartAddNew,\r\n  eventStartUpdate,\r\n} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hour');\r\nconst end = moment().minutes(0).seconds(0).add(2, 'hour');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: end.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n  const [dateStart, setdateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(end.toDate());\r\n\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const { modalOpen } = useSelector((state) => {\r\n    return state.ui;\r\n  });\r\n  const { activeEvent } = useSelector((state) => {\r\n    return state.calendar;\r\n  });\r\n\r\n  const [formValues, setformValues] = useState(initEvent);\r\n\r\n  const { notes, title, start: startForm, end: endForm } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setformValues(activeEvent);\r\n    } else {\r\n      setformValues(initEvent);\r\n    }\r\n  }, [activeEvent, setformValues]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setformValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    // Reestablecemos el evento activo\r\n    dispatch(eventClearActiveEvent());\r\n    //Reestablecemos el formulario\r\n    setformValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setdateStart(e);\r\n    setformValues({\r\n      ...formValues,\r\n      start: e,\r\n    });\r\n  };\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setformValues({\r\n      ...formValues,\r\n      end: e,\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    /*Converisión de fecha en javascript a fecha en moment */\r\n    const momentStart = moment(startForm);\r\n    const momentEnd = moment(endForm);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      console.log('Fecha 2 debe ser mayor');\r\n      return Swal.fire(\r\n        'Error',\r\n        'La fecha fin debe de ser mayor a la fecha de inicio',\r\n        'error'\r\n      );\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n    /**Si tenemos un evento activo, significa que lo tenemos\r\n     * que actualizar, si no sería añadir uno nuevo\r\n     */\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      /*Básicamente el formValues es el evento que queremos almacenar*/\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n    //TODO: Realizar grabación en base de datos\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {activeEvent ? 'Editar Evento' : 'Nuevo Evento'}</h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleClickNew = () => {\r\n    dispatch(uiOpenModal());\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n  return (\r\n    <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => {\r\n    dispatch(eventStartDelete());\r\n  };\r\n  return (\r\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span>Borrar evento</span>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventSetActive,\r\n  eventStartLoading,\r\n} from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  const [lastView, setlastView] = useState(\r\n    localStorage.getItem('lastView') || 'month'\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const { events, activeEvent } = useSelector((state) => state.calendar);\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading());\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n    //dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onViewChange = (vistaActual) => {\r\n    setlastView(vistaActual);\r\n    localStorage.setItem('lastView', vistaActual);\r\n  };\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white',\r\n    };\r\n    return {\r\n      style,\r\n    };\r\n  };\r\n\r\n  const onSelectedSlot = (e) => {\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Calendar\r\n        className=\"calendar-screen\"\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        onSelectSlot={onSelectedSlot}\r\n        selectable={true}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent,\r\n        }}\r\n      />\r\n      {!!activeEvent && <DeleteEventFab />}\r\n      <AddNewFab />\r\n\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n  isLoggedIn,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n  component: Component,\r\n  isLoggedIn,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <h5>Espere...</h5>;\r\n  }\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path=\"/login\"\r\n            component={LoginScreen}\r\n            isLoggedIn={!!uid}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n            isLoggedIn={!!uid}\r\n          />\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nimport './styles.css';\r\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}